*(5Б) Принципы ООП (Смысл слов).
объектно-ориентированное программирование работает с объектами, которые расположены в нескольких файлах и взаимодействуют между собой
Всё стоит на 3х слонах: инкапсуляция, наследование и полиморфизм
инкапсуляция - метод, при котором пользователь не задумывается о способе реализации объекта, а работает только с его интерфейсом(полезно, если мы хотим защитить что-то от изменений незнающего человека)
наследование - метод описания нового класса на основе уже существующего(родительского), причем он наследует его свойства и функциональность 
полиморфизм - возможность объектов с одинаковым интерфейсом иметь различную реализацию (насколько я понял, это как перегрузка функции)


*(5Б) Реализация инкапсуляция и интерфейса в классах с++.
В файле .h пишем, что мы хотим от класса(переменные, методы и т.п.)<- описание без привязки к реализации, а в соответствующем файле .cpp пишем сам код
инкапсуляция реализуется с помощью public, private и protected. Сначала мы договариваемся, что объект будет иметь в public, потом один человек занимается с public-ом, а второй - с реализацией объекта

*(5Б) Предназначение систем контроля версий.
На каком-то этапе проекта нашли баг, мы хотим найти, откуда он пошёл, поэтому нам необходимо иметь предыдущие версии проекта, чтобы найти коммит, с которого всё началось. Либо же нам просто нужна старая версия проекта

*(5Б) Назначение файла .gitignore в git репозитории. Почему важно иметь правильно настроенный файл .gitignore.
Говорит гиту, какие файлы нужно игнорировать;
 Нам не нужно перекидывать друг другу изменения в нечитаемых человеком файлах(или мы работаем на разных ОС), поэтому нужно контролировать коммиты с помощью .gitignore,
чтобы коммитить только значимые изменения

*(5Б) Пространства имен с++. Свойства пространств имен.
пространство имен- интрумент организации кода в виде логических групп ради избежания конфликта имен, например, при использовании нескольких библиотек.
для  видимости элементов пространства нужно использовать SpaceOfNames:: ..., using или using namespace SpaceOfNames

